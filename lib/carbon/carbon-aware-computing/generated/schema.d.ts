/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/register": {
    /**
     * Register yourself to this API. A API-Key is send to your mail address. The address is only used to inform you about incompatible changes to this service. 
     * @description Register yourself to this API.
     */
    post: operations["Register"];
  };
  "/emissions/forecasts/current": {
    /**
     * Get the best execution time with minimal grid carbon intensity 
     * @description Get the best execution time with minimal grid carbon intensity. A time intervall of the given duration within the earliest and latest execution time with the most renewable energy in the power grid of the location
     */
    get: operations["GetBestExecutionTime"];
  };
  "/locations": {
    /**
     * Get a list of available locations. Not all locations are active, to avoid unnecessary computing. Send a message to 'a.mirmohammadi@bluehands.de' to activate a location. 
     * @description Get a list of available locations. Not all locations are active, to avoid unnecessary computing. Send a message to 'a.mirmohammadi@bluehands.de' to activate a location.
     */
    get: operations["GetLocations"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    availableLocation: {
      name?: string;
      isActive?: boolean;
    };
    emissionsData: {
      /** Format: date-time */
      timestamp?: string;
      /** Format: double */
      value?: number;
    };
    emissionsForecast: {
      location?: string;
      /** Format: int32 */
      windowSize?: number;
      optimalDataPoints?: (components["schemas"]["emissionsData"])[];
    };
    problemDetails: {
      type?: string;
      title?: string;
      /** Format: int32 */
      status?: number | null;
      detail?: string;
      instance?: string;
      extensions?: {
        [key: string]: Record<string, never> | undefined;
      };
    };
    registrationData: {
      mailAddress?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /**
   * Register yourself to this API. A API-Key is send to your mail address. The address is only used to inform you about incompatible changes to this service. 
   * @description Register yourself to this API.
   */
  Register: {
    /** @description The mail address API-Key ist send */
    requestBody: {
      content: {
        "application/json": components["schemas"]["registrationData"];
      };
    };
    responses: {
      /** @description API-Key sent. Operation succeeded */
      204: never;
      /** @description failed operation */
      400: {
        content: {
          "application/json": components["schemas"]["problemDetails"];
        };
      };
    };
  };
  /**
   * Get the best execution time with minimal grid carbon intensity 
   * @description Get the best execution time with minimal grid carbon intensity. A time intervall of the given duration within the earliest and latest execution time with the most renewable energy in the power grid of the location
   */
  GetBestExecutionTime: {
    parameters: {
      query: {
        /** @description Comma seperated list of named locations (de,fr) or multiple location (location=fr & location=de) */
        location: (string)[];
        /** @description Start time boundary of forecasted data points. Ignores current forecast data points before this time. Defaults to the earliest time in the forecast data. */
        dataStartAt?: string;
        /** @description End time boundary of forecasted data points. Ignores current forecast data points after this time. Defaults to the latest time in the forecast data. */
        dataEndAt?: string;
        /** @description The estimated duration (in minutes) of the workload. Defaults to 5 Minutes (This is different from GSF SDK which default to the duration of a single forecast data point). */
        windowSize?: number;
      };
    };
    responses: {
      /** @description Forecast data is available and the best execution time is provided. Tis is a subset of the GSF SDK data. No infoormation on the underlying forecast data ist provided. E.g. no forecast boundaries, no forcast data, no forecast generation date */
      200: {
        content: {
          "application/json": (components["schemas"]["emissionsForecast"])[];
        };
      };
      /** @description failed operation */
      400: {
        content: {
          "application/json": components["schemas"]["problemDetails"];
        };
      };
      /** @description Forecast is not available for the location or time window. Operation failed */
      404: {
        content: {
          "application/json": components["schemas"]["problemDetails"];
        };
      };
    };
  };
  /**
   * Get a list of available locations. Not all locations are active, to avoid unnecessary computing. Send a message to 'a.mirmohammadi@bluehands.de' to activate a location. 
   * @description Get a list of available locations. Not all locations are active, to avoid unnecessary computing. Send a message to 'a.mirmohammadi@bluehands.de' to activate a location.
   */
  GetLocations: {
    responses: {
      /** @description Operation succeeded */
      200: {
        content: {
          "application/json": (components["schemas"]["availableLocation"])[];
        };
      };
    };
  };
}
